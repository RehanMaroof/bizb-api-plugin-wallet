enum TransactionType {
  inBound
  outBound
}

type wallets implements Node {
  _id: ID!
  amount: Int
  userId: ID
  transactions: TransactionType
  paymentProcessor: String
  createdAt: DateTime
  updatedAt: DateTime
}


type Query {
  getWalletsByUserId(userId: ID!): [wallets]
}

type Mutation {
  createWallet(userId: ID!, amount: Int!, paymentProcessor: String!): wallets
  updateWalletAmount(userId: ID!, newAmount: Int!): wallets
  makeTransaction(
    userId: ID!
    transactions: TransactionType!
    amount: Int!
  ): wallets
  deleteWallet(walletId: ID!): ID
}
